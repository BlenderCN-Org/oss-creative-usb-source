# Maintainer: Martell Malone <martellmalone@gmail.com>

_realname=cling

pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-cern-git" "${MINGW_PACKAGE_PREFIX}-clang-cern-git" "${MINGW_PACKAGE_PREFIX}-clang-analyzer-cern-git" "${MINGW_PACKAGE_PREFIX}-llvm-cern-git")
pkgver=2423.232f361
pkgrel=1
pkgdesc="LC language family frontend for LLVM (mingw-w64)"
arch=('any')
url="http://llvm.org"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
depends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('staticlibs' 'strip')
source=("llvm"::"git+http://root.cern.ch/git/llvm.git#branch=cling-patches"
        "clang"::"git+http://root.cern.ch/git/clang.git#branch=cling-patches"
        "cling"::"git+http://root.cern.ch/git/cling.git"
        0001-change-all-WIN32-defines-to-_WIN32-as-it-is-a-compil.patch
        0001-Add-SEH-exceptions-to-the-clang-frontend.patch
)
md5sums=('SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP')

pkgver() {
  cd "$srcdir/cling"
  local ver="$(git rev-parse HEAD)"
  printf "%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {

  #cd ${srcdir}/clang
  #patch -p1 -i ${srcdir}/0001-Add-SEH-exceptions-to-the-clang-frontend.patch

  cd ${srcdir}/cling
  patch -p1 -i ${srcdir}/0001-change-all-WIN32-defines-to-_WIN32-as-it-is-a-compil.patch

  cd ${srcdir}
  mv ${srcdir}/clang ${srcdir}/llvm/tools/clang
  mv ${srcdir}/cling ${srcdir}/llvm/tools/cling

}

build() {
  mkdir -p ${srcdir}/llvm/build-${MINGW_CHOST}
  cd ${srcdir}/llvm/build-${MINGW_CHOST}
  echo 'ac_cv_have_decl_strerror_s=${ac_cv_have_decl_strerror_s=no}' > config.cache

  # Include location of libffi headers in CPPFLAGS
  CPPFLAGS+=" $(pkg-config --cflags libffi)"

  ../configure \
    -C \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --with-sysroot=${MINGW_PREFIX} \
    --enable-targets=x86,x86_64,cpp \
    --enable-optimized \
    --disable-assertions \
    --disable-pthreads \
    --with-python=/usr/bin/python2 \
    --enable-libffi \
    --enable-docs
    #--enable-shared
    #--enable-embed-stdcxx
    #--enable-libcpp
    #--enable-cxx11
    #
    #--enable-ltdl-install
    #
    #--with-c-include-dir
    #--with-gcc-toolchain
    #--with-default-sysroot
    #--with-binutils-include
    #--with-bug-report-url
  make -j1
}

check() {
  cd "${srcdir}/llvm"
  make check
}

package_clang(){
  pkgdesc="C language family frontend for LLVM"
  depends=("${MINGW_PACKAGE_PREFIX}-llvm-cern-git")
  provides=("${MINGW_PACKAGE_PREFIX}-clang")
  conflicts=("${MINGW_PACKAGE_PREFIX}-clang")
  cd ${srcdir}/llvm/tools/clang
  local ver="$(git rev-parse HEAD)"
  pkgver="r$(git svn find-rev ${ver})"

  cd "${srcdir}/llvm/build-${MINGW_CHOST}/tools/clang"
    make -j1 DESTDIR="$pkgdir" install
  rm -r ${pkgdir}${MINGW_PREFIX}/docs
}

package_cling(){
  pkgdesc="C language family frontend for LLVM"
  depends=("${MINGW_PACKAGE_PREFIX}-llvm-cern-git" "${MINGW_PACKAGE_PREFIX}-clang-cern-git")
  provides=("${MINGW_PACKAGE_PREFIX}-cling")
  conflicts=("${MINGW_PACKAGE_PREFIX}-cling")
  cd ${srcdir}/llvm/tools/cling
  local ver="$(git rev-parse HEAD)"
  pkgver="r$(git svn find-rev ${ver})"

  cd "${srcdir}/llvm/build-${MINGW_CHOST}/tools/cling"
    make -j1 DESTDIR="$pkgdir" install
}


package_llvm(){
  pkgdesc="Low Level Virtual Machine"
  depends=("${MINGW_PACKAGE_PREFIX}-gcc")
  provides=("${MINGW_PACKAGE_PREFIX}-llvm")
  conflicts=("${MINGW_PACKAGE_PREFIX}-llvm")
  cd ${srcdir}/llvm
  local ver="$(git rev-parse HEAD)"
  pkgver="r$(git svn find-rev ${ver})"

  mv "${srcdir}/llvm/tools/clang" "${srcdir}/clang"
  mv "${srcdir}/llvm/build-${MINGW_CHOST}/tools/clang" "${srcdir}/clang-${MINGW_CHOST}"
  mv "${srcdir}/llvm/tools/cling" "${srcdir}/cling"
  mv "${srcdir}/llvm/build-${MINGW_CHOST}/tools/cling" "${srcdir}/cling-${MINGW_CHOST}"
  cd "${srcdir}/llvm/build-${MINGW_CHOST}"
  make -j1 DESTDIR="$pkgdir" install
  mv "${srcdir}/clang" "${srcdir}/llvm/tools/clang"
  mv "${srcdir}/clang-${MINGW_CHOST}" "${srcdir}/llvm/build-${MINGW_CHOST}/tools/clang"
  mv "${srcdir}/cling" "${srcdir}/llvm/tools/cling"
  mv "${srcdir}/cling-${MINGW_CHOST}" "${srcdir}/llvm/build-${MINGW_CHOST}/tools/cling"
  rm -r ${pkgdir}${MINGW_PREFIX}/docs

  # Install CMake stuff
  install -d "${pkgdir}${MINGW_PREFIX}"/share/llvm/cmake/{modules,platforms}
  install -Dm644 $srcdir/llvm/cmake/modules/*.cmake "${pkgdir}${MINGW_PREFIX}"/share/llvm/cmake/modules/
  install -Dm644 $srcdir/llvm/cmake/platforms/*.cmake "${pkgdir}${MINGW_PREFIX}"/share/llvm/cmake/platforms/
}

package_clang-analyzer() {
  pkgdesc="A source code analysis framework"
  url="http://clang-analyzer.llvm.org/"
  depends=("${MINGW_PACKAGE_PREFIX}-clang-cern-git" "${MINGW_PACKAGE_PREFIX}-python2")
  provides=("${MINGW_PACKAGE_PREFIX}-clang-analyzer")
  conflicts=("${MINGW_PACKAGE_PREFIX}-clang-analyzer")
  cd ${srcdir}/llvm/tools/clang
  local ver="$(git rev-parse HEAD)"
  pkgver="r$(git svn find-rev ${ver})"

  install -d ${pkgdir}${MINGW_PREFIX}/{bin,lib/clang-analyzer}
  for _tool in scan-{build,view}; do
    cp -r tools/$_tool ${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/
    ln -s ${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/$_tool/$_tool ${pkgdir}${MINGW_PREFIX}/bin/
  done

  # scan-build looks for clang within the same directory
  install -d ${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/scan-build/
  ln -s ${srcdir}/llvm/build-${MINGW_CHOST}/Release/bin/clang.exe ${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/scan-build/

  # Relocate man page
  install -d ${pkgdir}${MINGW_PREFIX}/share/man/man1
  mv ${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/scan-build/scan-build.1 \
    ${pkgdir}${MINGW_PREFIX}/share/man/man1/

  # Use Python 2
  #sed -i \
  #  -e 's|env python$|&2|' \
  #  -e 's|/usr/bin/python$|&2|' \
  #  "${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/scan-view/scan-view" \
  #  "${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer/scan-build/set-xcode-analyzer"

  # Compile Python scripts
  python2 -m compileall "${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer"
  python2 -O -m compileall "${pkgdir}${MINGW_PREFIX}/lib/clang-analyzer"
  install -Dm644 LICENSE.TXT "${pkgdir}${MINGW_PREFIX}/share/licenses/clang-analyzer/LICENSE"
}

package_mingw-w64-i686-clang-cern-git(){
  package_clang
}

package_mingw-w64-i686-cling-cern-git(){
  package_cling
}

package_mingw-w64-i686-clang-cern-analyzer-git(){
  package_clang-analyzer
}

package_mingw-w64-i686-llvm-cern-git(){
  package_llvm
}

package_mingw-w64-x86_64-clang-cern-git(){
  package_clang
}

package_mingw-w64-x86_64-cling-cern-git(){
  package_cling
}

package_mingw-w64-x86_64-clang-analyzer-cern-git(){
  package_clang-analyzer
}

package_mingw-w64-x86_64-llvm-cern-git(){
  package_llvm
}
