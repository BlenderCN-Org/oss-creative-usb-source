Index: src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp
===================================================================
--- src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp	(revision 45)
+++ src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp	(working copy)
@@ -22,6 +22,8 @@
 ContactDestroyedCallback	gContactDestroyedCallback = 0;
 ContactProcessedCallback	gContactProcessedCallback = 0;
 
+CollisionStartedCallback	gCollisionStartedCallback = 0;
+CollisionEndedCallback		gCollisionEndedCallback = 0;
 
 
 btPersistentManifold::btPersistentManifold()
Index: src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.h
===================================================================
--- src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.h	(revision 45)
+++ src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.h	(working copy)
@@ -32,6 +32,11 @@
 extern ContactDestroyedCallback	gContactDestroyedCallback;
 extern ContactProcessedCallback gContactProcessedCallback;
 
+typedef void (*CollisionStartedCallback)(class btPersistentManifold* manifold);
+typedef void (*CollisionEndedCallback)(class btPersistentManifold* manifold);
+extern CollisionStartedCallback gCollisionStartedCallback;
+extern CollisionEndedCallback gCollisionEndedCallback;
+
 //the enum starts at 1024 to avoid type conflicts with btTypedConstraint
 enum btContactManifoldTypes
 {
@@ -159,6 +164,11 @@
 
 		btAssert(m_pointCache[lastUsedIndex].m_userPersistentData==0);
 		m_cachedPoints--;
+		
+		if(gCollisionEndedCallback && m_cachedPoints == 0)
+		{
+			gCollisionEndedCallback(this);
+		}
 	}
 	void replaceContactPoint(const btManifoldPoint& newPoint,int insertIndex)
 	{
Index: src/BulletCollision/CollisionDispatch/btManifoldResult.cpp
===================================================================
--- src/BulletCollision/CollisionDispatch/btManifoldResult.cpp	(revision 45)
+++ src/BulletCollision/CollisionDispatch/btManifoldResult.cpp	(working copy)
@@ -68,6 +68,7 @@
 //	if (depth > m_manifoldPtr->getContactProcessingThreshold())
 		return;
 
+	bool isNewCollision = m_manifoldPtr->getNumContacts() == 0;
 	bool isSwapped = m_manifoldPtr->getBody0() != m_body0Wrap->getCollisionObject();
 
 	btVector3 pointA = pointInWorld + normalOnBInWorld * depth;
@@ -131,5 +132,9 @@
 		(*gContactAddedCallback)(m_manifoldPtr->getContactPoint(insertIndex),obj0,newPt.m_partId0,newPt.m_index0,obj1,newPt.m_partId1,newPt.m_index1);
 	}
 
+	if (gCollisionStartedCallback && isNewCollision)
+	{
+		gCollisionStartedCallback(m_manifoldPtr);
+	}
 }
 
