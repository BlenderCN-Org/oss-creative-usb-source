# Maintainer: Martell Malone < martell malone at g mail dot com >

_realname=go
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.4
pkgrel=1
pkgdesc="Go Lang"
arch=('any')
groups=("${MINGW_PACKAGE_PREFIX}")
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc")
url="http://www.golang.org/"

depends=()
options=('!strip')

source=("http://golang.org/dl/go${pkgver}.src.tar.gz"
        "msys2-unix-files.patch"
        "relocation-support.patch")
sha1sums=('6a7d9bd90550ae1e164d7803b3e945dc8309252b'
          '86ed6c4f5ab069e4470e3efc0cb9ae912ff7a31b'
          '995907f84dd53e6d04d21d350766e47a866e6b6e')

prepare() {
  pushd "${srcdir}"/${_realname}
  [ -f src/cmd/dist/pathtools.c ] && rm -f src/cmd/dist/pathtools.c
  [ -f src/cmd/dist/pathtools.h ] && rm -f src/cmd/dist/pathtools.h
  #patch -p1 -i ${srcdir}/msys2-unix-files.patch
  patch -p1 -i ${srcdir}/relocation-support.patch
  popd
  [ -d "${srcdir}"/$_realname-$pkgver ] && rm -rf "${srcdir}"/$_realname-$pkgver
  mv "${srcdir}"/${_realname} "${srcdir}"/$_realname-$pkgver
}

build() {
  cd "${srcdir}"/$_realname-$pkgver/src

  export GOROOT="$srcdir/$_realname-$pkgver"
  export GOBIN="$GOROOT/bin"
  export GOPATH="$srcdir/"
  export GOROOT_FINAL=${MINGW_PREFIX}/lib/go
  export GO_CFLAGS="-D__USE_MINGW_ANSI_STDIO=1"
  export CFLAGS="-D__USE_MINGW_ANSI_STDIO=1"
  ./make.bat
}

package() {
  mkdir -p ${pkgdir}${MINGW_PREFIX}
  mkdir -p ${pkgdir}${MINGW_PREFIX}/src

  mv "${srcdir}/go/bin" "${pkgdir}${MINGW_PREFIX}/"
  mv "${srcdir}/go/pkg" "${pkgdir}${MINGW_PREFIX}/"

  mv "${srcdir}/go/src/pkg" "${pkgdir}${MINGW_PREFIX}/src/"
  mv "${srcdir}/go/src/cmd" "${pkgdir}${MINGW_PREFIX}/src/"
}

package() {
  cd "$_realname-$pkgver"

  export GOROOT="$srcdir/$_realname-$pkgver"
  export GOBIN="$GOROOT/bin"

# install -Dm755 "$srcdir/godoc" "${pkgdir}${MINGW_PREFIX}/bin/godoc"

  mkdir -p "${pkgdir}${MINGW_PREFIX}/share/licenses/go"
  install -Dm644 "${srcdir}"/$_realname-$pkgver/LICENSE \
    "${pkgdir}${MINGW_PREFIX}/share/licenses/go/LICENSE"

  mkdir -p \
    "${pkgdir}${MINGW_PREFIX}/"{share/go,lib/go,lib/go/src,lib/go/site/src}

  cp -r doc misc -t                  "${pkgdir}${MINGW_PREFIX}/share/go"
# ln -s ${MINGW_PREFIX}/share/go/doc "${pkgdir}${MINGW_PREFIX}/lib/go/doc"
  cp -a bin                          "${pkgdir}${MINGW_PREFIX}"
  cp -a pkg                          "${pkgdir}${MINGW_PREFIX}/lib/go"
  cp -a "$GOROOT/src"                "${pkgdir}${MINGW_PREFIX}/lib/go/"
  cp -a "$GOROOT/src/cmd"            "${pkgdir}${MINGW_PREFIX}/lib/go/src/cmd"
  cp -a "$GOROOT/src/lib9"           "${pkgdir}${MINGW_PREFIX}/lib/go/src/"
  cp -a "$GOROOT/lib"                "${pkgdir}${MINGW_PREFIX}/lib/go/"
  cp -a "$GOROOT/include"            "${pkgdir}${MINGW_PREFIX}/lib/go/"

  install -Dm644 src/Make.* "${pkgdir}${MINGW_PREFIX}/lib/go/src"

  # Remove object files from target src dir
  find "${pkgdir}${MINGW_PREFIX}/lib/go/src/" -type f -name '*.[ao]' -delete

  # Fix for FS#32813
  find "$pkgdir" -type f -name sql.go -exec chmod -x {} \;

  # Remove all executable source files
  find "${pkgdir}${MINGW_PREFIX}/lib/go/src" -type f -executable -delete

  # Headers for C modules
  install -Dm644 src/runtime/runtime.h \
    "${pkgdir}${MINGW_PREFIX}/lib/go/src/runtime/runtime.h"
  install -Dm644 src/runtime/cgocall.h \
    "${pkgdir}${MINGW_PREFIX}/lib/go/src/runtime/cgocall.h"

  # This is to make go get code.google.com/p/go-tour/gotour and
  # then running the gotour executable work out of the box.
  # ln -sf ${MINGW_PREFIX}/bin "${pkgdir}${MINGW_PREFIX}/lib/go/bin"

  # For FS#42660 / FS#42661 / gox
  install -Dm755 src/make.bash "${pkgdir}${MINGW_PREFIX}/lib/go/src/make.bash"
  install -Dm755 src/run.bash "${pkgdir}${MINGW_PREFIX}/lib/go/src/run.bash"
  cp -r misc/ "${pkgdir}${MINGW_PREFIX}/lib/go/"

  # For godoc
  install -Dm644 favicon.ico "${pkgdir}${MINGW_PREFIX}/lib/go/favicon.ico"

  rm -f "${pkgdir}${MINGW_PREFIX}/share/go/doc/articles/wiki/get.bin"

  install -Dm644 VERSION "${pkgdir}${MINGW_PREFIX}/lib/go/VERSION"

  find "${pkgdir}${MINGW_PREFIX}/"{lib/go/pkg,bin} -type f -exec touch '{}' +
}
