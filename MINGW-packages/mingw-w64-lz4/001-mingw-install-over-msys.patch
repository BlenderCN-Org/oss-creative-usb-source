--- build-i686-w64-mingw32/Makefile.orig	2015-01-15 20:34:15.599200000 +0300
+++ build-i686-w64-mingw32/Makefile	2015-01-15 20:34:58.733200000 +0300
@@ -86,10 +86,6 @@
 	@echo Cleaning completed
 
 
-#------------------------------------------------------------------------
-#make install is validated only for Linux, OSX, kFreeBSD and Hurd targets
-ifneq (,$(filter $(shell uname),Linux Darwin GNU/kFreeBSD GNU))
-
 install:
 	@cd $(LZ4DIR); $(MAKE) -e install
 	@cd $(PRGDIR); $(MAKE) -e install
@@ -132,5 +128,3 @@
 
 prg-travis:
 	@cd $(PRGDIR); $(MAKE) -e test-travis
-
-endif
--- build-i686-w64-mingw32/lib/Makefile.orig	2015-01-15 20:39:30.808200000 +0300
+++ build-i686-w64-mingw32/lib/Makefile	2015-01-15 20:39:39.715800000 +0300
@@ -43,6 +43,7 @@
 CFLAGS ?= -O3
 CFLAGS += -I. -std=c99 -Wall -Wextra -Wundef -Wshadow -Wcast-align -Wstrict-prototypes -pedantic
 
+BINDIR=$(PREFIX)/bin
 LIBDIR?= $(PREFIX)/lib
 INCLUDEDIR=$(PREFIX)/include
 
@@ -55,11 +55,18 @@
 	SHARED_EXT_VER = $(LIBVER).$(SHARED_EXT)
 	SONAME_FLAGS = -install_name $(PREFIX)/lib/liblz4.$(SHARED_EXT_MAJOR) -compatibility_version $(LIBVER_MAJOR) -current_version $(LIBVER)
 else
+ifneq (,$(filter Windows%,$(OS)))
+	SHARED_EXT = dll
+	SONAME_FLAGS = -Wl,--out-implib,liblz4.$(SHARED_EXT).a
+	SHARED_EXT_MAJOR = $(SHARED_EXT)
+	SHARED_EXT_VER = $(SHARED_EXT)
+else
 	SONAME_FLAGS = -Wl,-soname=liblz4.$(SHARED_EXT).$(LIBVER_MAJOR)
 	SHARED_EXT = so
 	SHARED_EXT_MAJOR = $(SHARED_EXT).$(LIBVER_MAJOR)
 	SHARED_EXT_VER = $(SHARED_EXT).$(LIBVER)
 endif
+endif
 
 default: liblz4
 
@@ -71,19 +78,11 @@
 	@$(AR) rcs liblz4.a lz4.o lz4hc.o lz4frame.o xxhash.o
 	@echo compiling dynamic library $(LIBVER)
 	@$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -shared $^ -fPIC $(SONAME_FLAGS) -o $@.$(SHARED_EXT_VER)
-	@echo creating versioned links
-	@ln -sf $@.$(SHARED_EXT_VER) $@.$(SHARED_EXT_MAJOR)
-	@ln -sf $@.$(SHARED_EXT_VER) $@.$(SHARED_EXT)
 
 clean:
 	@rm -f core *.o *.a *.$(SHARED_EXT) *.$(SHARED_EXT).* liblz4.pc
 	@echo Cleaning library completed
 
-
-#------------------------------------------------------------------------
-#make install is validated only for Linux, OSX, kFreeBSD and Hurd targets
-ifneq (,$(filter $(shell uname),Linux Darwin GNU/kFreeBSD GNU))
-
 liblz4.pc: liblz4.pc.in Makefile
 	@echo creating pkgconfig
 	@sed -e 's|@PREFIX@|$(PREFIX)|' \
@@ -88,10 +92,9 @@
              $< >$@
 
 install: liblz4 liblz4.pc
-	@install -d -m 755 $(DESTDIR)$(LIBDIR)/pkgconfig/ $(DESTDIR)$(INCLUDEDIR)/
-	@install -m 755 liblz4.$(SHARED_EXT_VER) $(DESTDIR)$(LIBDIR)/liblz4.$(SHARED_EXT_VER)
-	@cp -a liblz4.$(SHARED_EXT_MAJOR) $(DESTDIR)$(LIBDIR)
-	@cp -a liblz4.$(SHARED_EXT) $(DESTDIR)$(LIBDIR)
+	@install -d -m 755 $(DESTDIR)$(LIBDIR)/pkgconfig/ $(DESTDIR)$(INCLUDEDIR)/ $(DESTDIR)$(BINDIR)/
+	@install -m 755 liblz4.$(SHARED_EXT) $(DESTDIR)$(BINDIR)/liblz4.$(SHARED_EXT_VER)
+	@cp -a liblz4.$(SHARED_EXT).a $(DESTDIR)$(LIBDIR)
 	@cp -a liblz4.pc $(DESTDIR)$(LIBDIR)/pkgconfig/
 	@install -m 644 liblz4.a $(DESTDIR)$(LIBDIR)/liblz4.a
 	@install -m 644 lz4.h $(DESTDIR)$(INCLUDEDIR)/lz4.h
@@ -113,5 +108,3 @@
 	@[ -f $(DESTDIR)$(INCLUDEDIR)/lz4.h ] && rm -f $(DESTDIR)$(INCLUDEDIR)/lz4.h
 	@[ -f $(DESTDIR)$(INCLUDEDIR)/lz4hc.h ] && rm -f $(DESTDIR)$(INCLUDEDIR)/lz4hc.h
 	@echo lz4 libraries successfully uninstalled
-
-endif
--- build-i686-w64-mingw32/programs/Makefile.orig	2015-01-15 20:38:56.379000000 +0300
+++ build-i686-w64-mingw32/programs/Makefile	2015-01-15 20:39:13.102200000 +0300
@@ -105,11 +105,6 @@
         datagen$(EXT)
 	@echo Cleaning completed
 
-
-#------------------------------------------------------------------------
-#make install is validated only for Linux, OSX, kFreeBSD and Hurd targets
-ifneq (,$(filter $(shell uname),Linux Darwin GNU/kFreeBSD GNU))
-
 install: lz4 lz4c
 	@echo Installing binaries
 	@install -d -m 755 $(DESTDIR)$(BINDIR)/ $(DESTDIR)$(MANDIR)/
@@ -202,5 +197,3 @@
 
 test-mem32: lz4c32 datagen
 # unfortunately, valgrind doesn't seem to work with non-native binary. If someone knows how to do a valgrind-test on a 32-bits exe with a 64-bits system...
-
-endif
