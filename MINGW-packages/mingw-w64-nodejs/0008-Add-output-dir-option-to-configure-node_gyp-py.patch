diff -urN node-v0.10.29.orig/configure node-v0.10.29/configure
--- node-v0.10.29.orig/configure	2014-07-26 11:44:13.288004900 +0100
+++ node-v0.10.29/configure	2014-07-26 11:44:27.908861500 +0100
@@ -82,6 +82,11 @@
     dest="shared_openssl_libname",
     help="Alternative lib name to link to (default: 'crypto,ssl')")
 
+parser.add_option("--output-dir",
+    action="store",
+    dest="output_dir",
+    help="Specify where to put generated build and output files")
+
 # deprecated
 parser.add_option("--openssl-use-sys",
     action="store_true",
@@ -689,18 +694,23 @@
 write('config.gypi', "# Do not edit. Generated by the configure script.\n" +
   pprint.pformat(output, indent=2) + "\n")
 
+outdir='out'
+if options.output_dir:
+  outdir = options.output_dir
+
 config = {
   'BUILDTYPE': 'Debug' if options.debug else 'Release',
   'USE_NINJA': str(int(options.use_ninja or 0)),
   'USE_XCODE': str(int(options.use_xcode or 0)),
   'PYTHON': sys.executable,
+  'OUTDIR': outdir,
 }
 config = '\n'.join(map('='.join, config.iteritems())) + '\n'
 
 write('config.mk',
       '# Do not edit. Generated by the configure script.\n' + config)
 
-gyp_args = [sys.executable, 'tools/gyp_node.py', '--no-parallel']
+gyp_args = [sys.executable, 'tools/gyp_node.py', '--no-parallel', '--output-dir', outdir]
 
 if options.use_ninja:
   gyp_args += ['-f', 'ninja-' + flavor]
diff -urN node-v0.10.29.orig/Makefile node-v0.10.29/Makefile
--- node-v0.10.29.orig/Makefile	2014-07-26 11:43:49.961542800 +0100
+++ node-v0.10.29/Makefile	2014-07-26 11:47:33.206391300 +0100
@@ -5,6 +5,7 @@
 NINJA ?= ninja
 DESTDIR ?=
 SIGN ?=
+OUTDIR ?= out
 
 # Determine EXEEXT
 EXEEXT=$(shell $(PYTHON) -c "import sysconfig; print(sysconfig.get_config_var('EXE'))")
@@ -19,39 +20,39 @@
 # BUILDTYPE=Debug builds both release and debug builds. If you want to compile
 # just the debug build, run `make -C out BUILDTYPE=Debug` instead.
 ifeq ($(BUILDTYPE),Release)
-all: out/Makefile node$(EXEEXT)
+all: $(OUTDIR)/Makefile node$(EXEEXT)
 else
-all: out/Makefile node$(EXEEXT) node_g$(EXEEXT)
+all: $(OUTDIR)/Makefile node$(EXEEXT) node_g$(EXEEXT)
 endif
 
-# The .PHONY is needed to ensure that we recursively use the out/Makefile
+# The .PHONY is needed to ensure that we recursively use the $(OUTDIR)/Makefile
 # to check for changes.
 .PHONY: node$(EXEEXT) node_g$(EXEEXT)
 
 ifeq ($(USE_NINJA),1)
 node$(EXEEXT): config.gypi
-	$(NINJA) -C out/Release/
-	ln -fs out/Release/node$(EXEEXT) $@
+	$(NINJA) -C $(OUTDIR)/Release/
+	ln -fs $(OUTDIR)/Release/node$(EXEEXT) $@
 
 node_g$(EXEEXT): config.gypi
-	$(NINJA) -C out/Debug/
-	ln -fs out/Debug/node$(EXEEXT) $@
+	$(NINJA) -C $(OUTDIR)/Debug/
+	ln -fs $(OUTDIR)/Debug/node$(EXEEXT) $@
 else
-node$(EXEEXT): config.gypi out/Makefile
-	$(MAKE) -C out BUILDTYPE=Release V=$(V)
-	ln -fs out/Release/node$(EXEEXT) $@
-
-node_g$(EXEEXT): config.gypi out/Makefile
-	$(MAKE) -C out BUILDTYPE=Debug V=$(V)
-	ln -fs out/Debug/node$(EXEEXT) $@
+node$(EXEEXT): config.gypi $(OUTDIR)/Makefile
+	$(MAKE) -C $(OUTDIR) BUILDTYPE=Release V=$(V)
+	ln -fs $(OUTDIR)/Release/node$(EXEEXT) $@
+
+node_g$(EXEEXT): config.gypi $(OUTDIR)/Makefile
+	$(MAKE) -C $(OUTDIR) BUILDTYPE=Debug V=$(V)
+	ln -fs $(OUTDIR)/Debug/node$(EXEEXT) $@
 endif
 
-out/Makefile: common.gypi deps/uv/uv.gyp deps/http_parser/http_parser.gyp deps/zlib/zlib.gyp deps/v8/build/common.gypi deps/v8/tools/gyp/v8.gyp node.gyp config.gypi
+$(OUTDIR)/Makefile: common.gypi deps/uv/uv.gyp deps/http_parser/http_parser.gyp deps/zlib/zlib.gyp deps/v8/build/common.gypi deps/v8/tools/gyp/v8.gyp node.gyp config.gypi
 ifeq ($(USE_NINJA),1)
-	touch out/Makefile
+	touch $(OUTDIR)/Makefile
 	$(PYTHON) tools/gyp_node.py -f ninja
 else
-	$(PYTHON) tools/gyp_node.py -f make
+	$(PYTHON) tools/gyp_node.py -f make --output-dir=$(OUTDIR)
 endif
 
 config.gypi: configure
@@ -64,12 +65,12 @@
 	$(PYTHON) tools/install.py $@ $(DESTDIR)
 
 clean:
-	-rm -rf out/Makefile node$(EXEEXT) node_g$(EXEEXT) out/$(BUILDTYPE)/node$(EXEEXT) blog.html email.md
-	-find out/ -name '*.o' -o -name '*.a' | xargs rm -rf
+	-rm -rf $(OUTDIR)/Makefile node$(EXEEXT) node_g$(EXEEXT) $(OUTDIR)/$(BUILDTYPE)/node$(EXEEXT) blog.html email.md
+	-find $(OUTDIR)/ -name '*.o' -o -name '*.a' | xargs rm -rf
 	-rm -rf node_modules
 
 distclean:
-	-rm -rf out
+	-rm -rf $(OUTDIR)
 	-rm -f config.gypi
 	-rm -f config.mk
 	-rm -rf node$(EXEEXT) node_g$(EXEEXT) blog.html email.md
@@ -136,18 +137,18 @@
 	$(MAKE) --directory=tools clean
 
 apidoc_sources = $(wildcard doc/api/*.markdown)
-apidocs = $(addprefix out/,$(apidoc_sources:.markdown=.html)) \
-          $(addprefix out/,$(apidoc_sources:.markdown=.json))
+apidocs = $(addprefix $(OUTDIR)/,$(apidoc_sources:.markdown=.html)) \
+          $(addprefix $(OUTDIR)/,$(apidoc_sources:.markdown=.json))
 
-apidoc_dirs = out/doc out/doc/api/ out/doc/api/assets
+apidoc_dirs = $(OUTDIR)/doc $(OUTDIR)/doc/api/ $(OUTDIR)/doc/api/assets
 
-apiassets = $(subst api_assets,api/assets,$(addprefix out/,$(wildcard doc/api_assets/*)))
+apiassets = $(subst api_assets,api/assets,$(addprefix $(OUTDIR)/,$(wildcard doc/api_assets/*)))
 
 website_files = \
-	out/doc/sh_main.js    \
-	out/doc/sh_javascript.min.js
+	$(OUTDIR)/doc/sh_main.js    \
+	$(OUTDIR)/doc/sh_javascript.min.js
 
-doc: $(apidoc_dirs) $(website_files) $(apiassets) $(apidocs) tools/doc/ out/doc/changelog.html node$(EXEEXT)
+doc: $(apidoc_dirs) $(website_files) $(apiassets) $(apidocs) tools/doc/ $(OUTDIR)/doc/changelog.html node$(EXEEXT)
 
 doc-branch: NODE_DOC_VERSION = v$(shell $(PYTHON) tools/getnodeversion.py | cut -f1,2 -d.)
 doc-branch: doc
@@ -155,20 +156,20 @@
 $(apidoc_dirs):
 	mkdir -p $@
 
-out/doc/api/assets/%: doc/api_assets/% out/doc/api/assets/
+$(OUTDIR)/doc/api/assets/%: doc/api_assets/% $(OUTDIR)/doc/api/assets/
 	cp $< $@
 
-out/doc/changelog.html: ChangeLog doc/changelog-head.html doc/changelog-foot.html tools/build-changelog.sh node$(EXEEXT)
+$(OUTDIR)/doc/changelog.html: ChangeLog doc/changelog-head.html doc/changelog-foot.html tools/build-changelog.sh node$(EXEEXT)
 	bash tools/build-changelog.sh
 
-out/doc/%: doc/%
+$(OUTDIR)/doc/%: doc/%
 	cp -r $< $@
 
-out/doc/api/%.json: doc/api/%.markdown node$(EXEEXT)
-	NODE_DOC_VERSION=$(NODE_DOC_VERSION) out/Release/node$(EXEEXT) tools/doc/generate.js --format=json $< > $@
+$(OUTDIR)/doc/api/%.json: doc/api/%.markdown node$(EXEEXT)
+	NODE_DOC_VERSION=$(NODE_DOC_VERSION) $(OUTDIR)/Release/node$(EXEEXT) tools/doc/generate.js --format=json $< > $@
 
-out/doc/api/%.html: doc/api/%.markdown node$(EXEEXT)
-	NODE_DOC_VERSION=$(NODE_DOC_VERSION) out/Release/node$(EXEEXT) tools/doc/generate.js --format=html --template=doc/template.html $< > $@
+$(OUTDIR)/doc/api/%.html: doc/api/%.markdown node$(EXEEXT)
+	NODE_DOC_VERSION=$(NODE_DOC_VERSION) $(OUTDIR)/Release/node$(EXEEXT) tools/doc/generate.js --format=html --template=doc/template.html $< > $@
 
 email.md: ChangeLog tools/email-footer.md
 	bash tools/changelog-head.sh | sed 's|^\* #|* \\#|g' > $@
@@ -178,7 +179,7 @@
 	cat $< | ./node$(EXEEXT) tools/doc/node_modules/.bin/marked > $@
 
 website-upload: doc
-	rsync -r out/doc/ node@nodejs.org:~/web/nodejs.org/
+	rsync -r $(OUTDIR)/doc/ node@nodejs.org:~/web/nodejs.org/
 	ssh node@nodejs.org '\
     rm -f ~/web/nodejs.org/dist/latest &&\
     ln -s $(VERSION) ~/web/nodejs.org/dist/latest &&\
@@ -190,13 +191,13 @@
 doc-branch-upload: NODE_DOC_VERSION = v$(shell $(PYTHON) tools/getnodeversion.py | cut -f1,2 -d.)
 doc-branch-upload: doc-branch
 	echo $(NODE_DOC_VERSION)
-	rsync -r out/doc/api/ node@nodejs.org:~/web/nodejs.org/$(NODE_DOC_VERSION)
+	rsync -r $(OUTDIR)/doc/api/ node@nodejs.org:~/web/nodejs.org/$(NODE_DOC_VERSION)
 
-docopen: out/doc/api/all.html
-	-google-chrome out/doc/api/all.html
+docopen: $(OUTDIR)/doc/api/all.html
+	-google-chrome $(OUTDIR)/doc/api/all.html
 
 docclean:
-	-rm -rf out/doc
+	-rm -rf $(OUTDIR)/doc
 
 RAWVER=$(shell $(PYTHON) tools/getnodeversion.py)
 VERSION=v$(RAWVER)
@@ -225,7 +226,7 @@
 TARBALL=$(TARNAME).tar.gz
 BINARYNAME=$(TARNAME)-$(PLATFORM)-$(ARCH)
 BINARYTAR=$(BINARYNAME).tar.gz
-PKG=out/$(TARNAME).pkg
+PKG=$(OUTDIR)/$(TARNAME).pkg
 packagemaker=/Developer/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker
 
 PKGSRC=nodejs-$(DESTCPU)-$(RAWVER).tgz
@@ -235,7 +236,7 @@
 
 dist: doc $(TARBALL) $(PKG)
 
-PKGDIR=out/dist-osx
+PKGDIR=$(OUTDIR)/dist-osx
 
 release-only:
 	@if [ "$(shell git status --porcelain | egrep -v '^\?\? ')" = "" ]; then \
@@ -263,10 +264,10 @@
 
 $(PKG): release-only
 	rm -rf $(PKGDIR)
-	rm -rf out/deps out/Release
+	rm -rf $(OUTDIR)/deps $(OUTDIR)/Release
 	$(PYTHON) ./configure --without-snapshot --dest-cpu=ia32 --tag=$(TAG)
 	$(MAKE) install V=$(V) DESTDIR=$(PKGDIR)/32
-	rm -rf out/deps out/Release
+	rm -rf $(OUTDIR)/deps $(OUTDIR)/Release
 	$(PYTHON) ./configure --without-snapshot --dest-cpu=x64 --tag=$(TAG)
 	$(MAKE) install V=$(V) DESTDIR=$(PKGDIR)
 	SIGN="$(APP_SIGN)" PKGDIR="$(PKGDIR)" bash tools/osx-codesign.sh
@@ -286,7 +287,7 @@
 	git archive --format=tar --prefix=$(TARNAME)/ HEAD | tar xf -
 	mkdir -p $(TARNAME)/doc/api
 	cp doc/node.1 $(TARNAME)/doc/node.1
-	cp -r out/doc/api/* $(TARNAME)/doc/api/
+	cp -r $(OUTDIR)/doc/api/* $(TARNAME)/doc/api/
 	rm -rf $(TARNAME)/deps/v8/test # too big
 	rm -rf $(TARNAME)/doc/images # too big
 	find $(TARNAME)/ -type l | xargs rm # annoying on windows
@@ -298,7 +299,7 @@
 
 $(BINARYTAR): release-only
 	rm -rf $(BINARYNAME)
-	rm -rf out/deps out/Release
+	rm -rf $(OUTDIR)/deps $(OUTDIR)/Release
 	$(PYTHON) ./configure --prefix=/ --without-snapshot --dest-cpu=$(DESTCPU) --tag=$(TAG) $(CONFIG_FLAGS)
 	$(MAKE) install DESTDIR=$(BINARYNAME) V=$(V) PORTABLE=1
 	cp README.md $(BINARYNAME)
@@ -311,7 +312,7 @@
 binary: $(BINARYTAR)
 
 $(PKGSRC): release-only
-	rm -rf dist out
+	rm -rf dist $(OUTDIR)
 	$(PYTHON) configure --prefix=/ --without-snapshot \
 		--dest-cpu=$(DESTCPU) --tag=$(TAG) $(CONFIG_FLAGS)
 	$(MAKE) install DESTDIR=dist
diff -urN node-v0.10.29.orig/tools/gyp_node.py node-v0.10.29/tools/gyp_node.py
--- node-v0.10.29.orig/tools/gyp_node.py	2014-07-26 11:43:57.800038200 +0100
+++ node-v0.10.29/tools/gyp_node.py	2014-07-26 11:44:27.947366400 +0100
@@ -14,6 +14,17 @@
 # to be written.
 output_dir = os.path.join(os.path.abspath(node_root), 'out')
 
+try:
+  od_index = sys.argv.index('--output-dir')
+  if od_index != -1:
+    output_dir = sys.argv[od_index+1]
+    if not os.path.isabs(output_dir):
+      output_dir = os.path.join(os.path.abspath(node_root), output_dir)
+    sys.argv.pop(od_index)
+    sys.argv.pop(od_index)
+except:
+  pass
+
 def run_gyp(args):
   rc = gyp.main(args)
   if rc != 0:
