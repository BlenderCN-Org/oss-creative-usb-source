diff -urN x86_64.orig/deps/npm/node_modules/node-gyp/lib/configure.js x86_64/deps/npm/node_modules/node-gyp/lib/configure.js
--- x86_64.orig/deps/npm/node_modules/node-gyp/lib/configure.js	2015-01-16 14:46:11.711250800 +0000
+++ x86_64/deps/npm/node_modules/node-gyp/lib/configure.js	2015-02-03 01:05:43.082851900 +0000
@@ -16,9 +16,9 @@
   , extend = require('util')._extend
   , spawn = cp.spawn
   , execFile = cp.execFile
-  , win = process.platform == 'win32'
+  , winMsvc = process.platform == 'win32' && process.wintoolchain == 'msvc'
 
-exports.usage = 'Generates ' + (win ? 'MSVC project files' : 'a Makefile') + ' for the current module'
+exports.usage = 'Generates ' + (winMsvc ? 'MSVC project files' : 'a Makefile') + ' for the current module'
 
 function configure (gyp, argv, callback) {
 
@@ -36,7 +36,7 @@
     which(python, function (err, execPath) {
       if (err) {
         log.verbose('`which` failed', python, err)
-        if (win) {
+        if (winMsvc) {
           guessPython()
         } else {
           failNoPython()
@@ -266,7 +266,7 @@
     if (err) return callback(err)
 
     if (!~argv.indexOf('-f') && !~argv.indexOf('--format')) {
-      if (win) {
+      if (winMsvc) {
         log.verbose('gyp', 'gyp format was not specified; forcing "msvs"')
         // force the 'make' target for non-Windows
         argv.push('-f', 'msvs')
@@ -283,7 +283,7 @@
       })
     }
 
-    if (win && !hasMsvsVersion()) {
+    if (winMsvc && !hasMsvsVersion()) {
       if ('msvs_version' in gyp.opts) {
         argv.push('-G', 'msvs_version=' + gyp.opts.msvs_version)
       } else {
@@ -301,7 +301,7 @@
     var addon_gypi = path.resolve(__dirname, '..', 'addon.gypi')
     var common_gypi = path.resolve(nodeDir, 'common.gypi')
     var output_dir = 'build'
-    if (win) {
+    if (winMsvc) {
       // Windows expects an absolute path
       output_dir = buildDir
     }
diff -urN x86_64.orig/src/node.cc x86_64/src/node.cc
--- x86_64.orig/src/node.cc	2014-12-22 21:22:32.000000000 +0000
+++ x86_64/src/node.cc	2015-02-03 01:02:41.994856700 +0000
@@ -2321,6 +2321,17 @@
   // process.platform
   process->Set(String::NewSymbol("platform"), String::New(PLATFORM));
 
+#if defined(_WIN32)
+  // distinguish between msvc and mingw-w64 for node-gyp
+  #if defined(_MSC_VER)
+    process->Set(String::NewSymbol("wintoolchain"), String::New("msvc"));
+  #elif defined(__MINGW32__)
+    process->Set(String::NewSymbol("wintoolchain"), String::New("mingw-w64"));
+  #else
+    #error "Cannot determine wintoolchain"
+  #endif
+#endif
+
   // process.argv
   Local<Array> arguments = Array::New(argc - option_end_index + 1);
   arguments->Set(Integer::New(0), String::New(argv[0]));
