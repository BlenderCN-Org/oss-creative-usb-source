From 873f5103485641cda5bff523edcd417e28840532 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Fri, 7 Feb 2014 17:15:51 +0000
Subject: [PATCH 2/2] Move event_tracer{.cpp,.h} to libGLESv2 instead of common

---
 src/common/event_tracer.cpp               | 49 -------------------------------
 src/common/event_tracer.h                 | 41 --------------------------
 src/libGLESv2/event_tracer.cpp            | 49 +++++++++++++++++++++++++++++++
 src/libGLESv2/event_tracer.h              | 41 ++++++++++++++++++++++++++
 src/third_party/trace_event/trace_event.h |  2 +-
 5 files changed, 91 insertions(+), 91 deletions(-)
 delete mode 100644 src/common/event_tracer.cpp
 delete mode 100644 src/common/event_tracer.h
 create mode 100644 src/libGLESv2/event_tracer.cpp
 create mode 100644 src/libGLESv2/event_tracer.h

diff --git a/src/common/event_tracer.cpp b/src/common/event_tracer.cpp
deleted file mode 100644
index 142373d..0000000
--- a/src/common/event_tracer.cpp
+++ /dev/null
@@ -1,49 +0,0 @@
-// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#include "common/event_tracer.h"
-
-namespace gl
-{
-
-GetCategoryEnabledFlagFunc g_getCategoryEnabledFlag;
-AddTraceEventFunc g_addTraceEvent;
-
-}  // namespace gl
-
-extern "C" {
-
-void TRACE_ENTRY SetTraceFunctionPointers(GetCategoryEnabledFlagFunc getCategoryEnabledFlag,
-                                        AddTraceEventFunc addTraceEvent)
-{
-    gl::g_getCategoryEnabledFlag = getCategoryEnabledFlag;
-    gl::g_addTraceEvent = addTraceEvent;
-}
-
-}  // extern "C"
-
-namespace gl
-{
-
-const unsigned char* TraceGetTraceCategoryEnabledFlag(const char* name)
-{
-    if (g_getCategoryEnabledFlag)
-    {
-        return g_getCategoryEnabledFlag(name);
-    }
-    static unsigned char disabled = 0;
-    return &disabled;
-}
-
-void TraceAddTraceEvent(char phase, const unsigned char* categoryGroupEnabled, const char* name, unsigned long long id,
-                        int numArgs, const char** argNames, const unsigned char* argTypes,
-                        const unsigned long long* argValues, unsigned char flags)
-{
-    if (g_addTraceEvent)
-    {
-        g_addTraceEvent(phase, categoryGroupEnabled, name, id, numArgs, argNames, argTypes, argValues, flags);
-    }
-}
-
-}  // namespace gl
diff --git a/src/common/event_tracer.h b/src/common/event_tracer.h
deleted file mode 100644
index 14b7b29..0000000
--- a/src/common/event_tracer.h
+++ /dev/null
@@ -1,41 +0,0 @@
-// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef COMMON_EVENT_TRACER_H_
-#define COMMON_EVENT_TRACER_H_
-
-#if !defined(TRACE_ENTRY)
-#if defined(_WIN32)
-#define TRACE_ENTRY __stdcall
-#else
-#define TRACE_ENTRY
-#endif // // _WIN32
-#endif //TRACE_ENTRY
-
-extern "C" {
-
-typedef const unsigned char* (*GetCategoryEnabledFlagFunc)(const char* name);
-typedef void (*AddTraceEventFunc)(char phase, const unsigned char* categoryGroupEnabled, const char* name,
-                                  unsigned long long id, int numArgs, const char** argNames,
-                                  const unsigned char* argTypes, const unsigned long long* argValues,
-                                  unsigned char flags);
-
-// extern "C" so that it has a reasonable name for GetProcAddress.
-void TRACE_ENTRY SetTraceFunctionPointers(GetCategoryEnabledFlagFunc get_category_enabled_flag,
-                                          AddTraceEventFunc add_trace_event_func);
-
-}
-
-namespace gl
-{
-
-const unsigned char* TraceGetTraceCategoryEnabledFlag(const char* name);
-
-void TraceAddTraceEvent(char phase, const unsigned char* categoryGroupEnabled, const char* name, unsigned long long id,
-                        int numArgs, const char** argNames, const unsigned char* argTypes,
-                        const unsigned long long* argValues, unsigned char flags);
-
-}
-
-#endif  // COMMON_EVENT_TRACER_H_
diff --git a/src/libGLESv2/event_tracer.cpp b/src/libGLESv2/event_tracer.cpp
new file mode 100644
index 0000000..b38e7c3
--- /dev/null
+++ b/src/libGLESv2/event_tracer.cpp
@@ -0,0 +1,49 @@
+// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "event_tracer.h"
+
+namespace gl
+{
+
+GetCategoryEnabledFlagFunc g_getCategoryEnabledFlag;
+AddTraceEventFunc g_addTraceEvent;
+
+}  // namespace gl
+
+extern "C" {
+
+void TRACE_ENTRY SetTraceFunctionPointers(GetCategoryEnabledFlagFunc getCategoryEnabledFlag,
+                                        AddTraceEventFunc addTraceEvent)
+{
+    gl::g_getCategoryEnabledFlag = getCategoryEnabledFlag;
+    gl::g_addTraceEvent = addTraceEvent;
+}
+
+}  // extern "C"
+
+namespace gl
+{
+
+const unsigned char* TraceGetTraceCategoryEnabledFlag(const char* name)
+{
+    if (g_getCategoryEnabledFlag)
+    {
+        return g_getCategoryEnabledFlag(name);
+    }
+    static unsigned char disabled = 0;
+    return &disabled;
+}
+
+void TraceAddTraceEvent(char phase, const unsigned char* categoryGroupEnabled, const char* name, unsigned long long id,
+                        int numArgs, const char** argNames, const unsigned char* argTypes,
+                        const unsigned long long* argValues, unsigned char flags)
+{
+    if (g_addTraceEvent)
+    {
+        g_addTraceEvent(phase, categoryGroupEnabled, name, id, numArgs, argNames, argTypes, argValues, flags);
+    }
+}
+
+}  // namespace gl
diff --git a/src/libGLESv2/event_tracer.h b/src/libGLESv2/event_tracer.h
new file mode 100644
index 0000000..14b7b29
--- /dev/null
+++ b/src/libGLESv2/event_tracer.h
@@ -0,0 +1,41 @@
+// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef COMMON_EVENT_TRACER_H_
+#define COMMON_EVENT_TRACER_H_
+
+#if !defined(TRACE_ENTRY)
+#if defined(_WIN32)
+#define TRACE_ENTRY __stdcall
+#else
+#define TRACE_ENTRY
+#endif // // _WIN32
+#endif //TRACE_ENTRY
+
+extern "C" {
+
+typedef const unsigned char* (*GetCategoryEnabledFlagFunc)(const char* name);
+typedef void (*AddTraceEventFunc)(char phase, const unsigned char* categoryGroupEnabled, const char* name,
+                                  unsigned long long id, int numArgs, const char** argNames,
+                                  const unsigned char* argTypes, const unsigned long long* argValues,
+                                  unsigned char flags);
+
+// extern "C" so that it has a reasonable name for GetProcAddress.
+void TRACE_ENTRY SetTraceFunctionPointers(GetCategoryEnabledFlagFunc get_category_enabled_flag,
+                                          AddTraceEventFunc add_trace_event_func);
+
+}
+
+namespace gl
+{
+
+const unsigned char* TraceGetTraceCategoryEnabledFlag(const char* name);
+
+void TraceAddTraceEvent(char phase, const unsigned char* categoryGroupEnabled, const char* name, unsigned long long id,
+                        int numArgs, const char** argNames, const unsigned char* argTypes,
+                        const unsigned long long* argValues, unsigned char flags);
+
+}
+
+#endif  // COMMON_EVENT_TRACER_H_
diff --git a/src/third_party/trace_event/trace_event.h b/src/third_party/trace_event/trace_event.h
index 1880056..ebd5a1e 100644
--- a/src/third_party/trace_event/trace_event.h
+++ b/src/third_party/trace_event/trace_event.h
@@ -144,7 +144,7 @@
 
 #include <string>
 
-#include "common/event_tracer.h"
+#include "libGLESv2/event_tracer.h"
 
 // By default, const char* argument values are assumed to have long-lived scope
 // and will not be copied. Use this macro to force a const char* to be copied.
-- 
1.8.5.3

