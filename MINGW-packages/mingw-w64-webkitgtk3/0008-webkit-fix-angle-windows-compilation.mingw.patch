--- /dev/null	2013-12-01 23:52:53.623612457 +0100
+++ webkitgtk-2.2.3/Source/ThirdParty/ANGLE/src/compiler/ossource_win.cpp	2013-12-04 23:17:33.367830698 +0100
@@ -0,0 +1,58 @@
+//
+// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+//
+
+#include "compiler/osinclude.h"
+//
+// This file contains contains the window's specific functions
+//
+
+#if !defined(ANGLE_OS_WIN)
+#error Trying to build a windows specific file in a non windows build.
+#endif
+
+
+//
+// Thread Local Storage Operations
+//
+OS_TLSIndex OS_AllocTLSIndex()
+{
+        DWORD dwIndex = TlsAlloc();
+        if (dwIndex == TLS_OUT_OF_INDEXES) {
+                assert(0 && "OS_AllocTLSIndex(): Unable to allocate Thread Local Storage");
+                return OS_INVALID_TLS_INDEX;
+        }
+
+        return dwIndex;
+}
+
+
+bool OS_SetTLSValue(OS_TLSIndex nIndex, void *lpvValue)
+{
+        if (nIndex == OS_INVALID_TLS_INDEX) {
+                assert(0 && "OS_SetTLSValue(): Invalid TLS Index");
+                return false;
+        }
+
+        if (TlsSetValue(nIndex, lpvValue))
+                return true;
+        else
+                return false;
+}
+
+
+bool OS_FreeTLSIndex(OS_TLSIndex nIndex)
+{
+        if (nIndex == OS_INVALID_TLS_INDEX) {
+                assert(0 && "OS_SetTLSValue(): Invalid TLS Index");
+                return false;
+        }
+
+        if (TlsFree(nIndex))
+                return true;
+        else
+                return false;
+}
+
--- webkitgtk-2.2.3/Source/ThirdParty/ANGLE/GNUmakefile.am.orig	2013-12-04 23:12:01.034574086 +0100
+++ webkitgtk-2.2.3/Source/ThirdParty/ANGLE/GNUmakefile.am	2013-12-04 23:19:09.719774371 +0100
@@ -80,7 +80,6 @@
 	Source/ThirdParty/ANGLE/src/compiler/MMap.h \
 	Source/ThirdParty/ANGLE/src/compiler/NodeSearch.h \
 	Source/ThirdParty/ANGLE/src/compiler/osinclude.h \
-	Source/ThirdParty/ANGLE/src/compiler/ossource_posix.cpp \
 	Source/ThirdParty/ANGLE/src/compiler/OutputESSL.cpp \
 	Source/ThirdParty/ANGLE/src/compiler/OutputESSL.h \
 	Source/ThirdParty/ANGLE/src/compiler/OutputGLSLBase.cpp \
@@ -161,3 +160,10 @@
 	Source/ThirdParty/ANGLE/src/compiler/VersionGLSL.h \
 	Source/ThirdParty/ANGLE/src/third_party/compiler/ArrayBoundsClamper.cpp \
 	Source/ThirdParty/ANGLE/src/third_party/compiler/ArrayBoundsClamper.h
+
+if TARGET_WIN32
+libANGLE_la_SOURCES += Source/ThirdParty/ANGLE/src/compiler/ossource_win.cpp
+else
+libANGLE_la_SOURCES += Source/ThirdParty/ANGLE/src/compiler/ossource_posix.cpp
+endif
+
