diff -ur gtk+-3.12.0/gdk/win32/gdkmain-win32.c gtk+-3.12.0.bak2/gdk/win32/gdkmain-win32.c
--- gtk+-3.12.0/gdk/win32/gdkmain-win32.c	2014-03-24 17:28:56.000000000 +0000
+++ gtk+-3.12.0.bak2/gdk/win32/gdkmain-win32.c	2014-04-08 07:59:05.282205200 +0000
@@ -48,6 +48,12 @@
 
 static gboolean dummy;
 
+#ifdef HAVE_W32_DWM
+static HMODULE dwmdll = NULL;
+PFN_DwmEnableBlurBehindWindow dwmEnableBlurBehindWindow = NULL;
+PFN_DwmIsCompositionEnabled dwmIsCompositionEnabled = NULL;
+#endif
+
 const GOptionEntry _gdk_windowing_args[] = {
   { "sync", 0, 0, G_OPTION_ARG_NONE, &gdk_synchronize, 
     /* Description of --sync in --help output */              N_("Don't batch GDI requests"), NULL },
@@ -132,6 +138,29 @@
   _cf_text_html = RegisterClipboardFormat ("text/html");
 
   _gdk_win32_selection_init ();
+
+/* HAVE_W32_DWM means that we have necessary declarations at compile-time,
+ * but we'd still like to be able to run on XP, so we'll load the functions
+ * we need at runtime.
+ */
+#ifdef HAVE_W32_DWM
+  if (dwmdll == NULL)
+    {
+      dwmdll = LoadLibraryA ("dwmapi.dll");
+      if (dwmdll == NULL)
+        {
+          /* This will make sure that we only try this once */
+          dwmdll = INVALID_HANDLE_VALUE;
+        }
+      else
+        {
+          dwmEnableBlurBehindWindow = (PFN_DwmEnableBlurBehindWindow)
+              GetProcAddress (dwmdll, "DwmEnableBlurBehindWindow");
+          dwmIsCompositionEnabled = (PFN_DwmIsCompositionEnabled)
+              GetProcAddress (dwmdll, "DwmIsCompositionEnabled");
+        }
+    }
+#endif
 }
 
 void
diff -ur gtk+-3.12.0/gdk/win32/gdkprivate-win32.h gtk+-3.12.0.bak2/gdk/win32/gdkprivate-win32.h
--- gtk+-3.12.0/gdk/win32/gdkprivate-win32.h	2014-03-06 04:42:57.000000000 +0000
+++ gtk+-3.12.0.bak2/gdk/win32/gdkprivate-win32.h	2014-04-08 07:46:45.491763700 +0000
@@ -41,6 +41,15 @@
 
 #include "config.h"
 
+#ifdef HAVE_W32_DWM
+#include <dwmapi.h>
+typedef HRESULT (WINAPI *PFN_DwmEnableBlurBehindWindow)(HWND,
+    const DWM_BLURBEHIND *);
+typedef HRESULT (WINAPI *PFN_DwmIsCompositionEnabled)(BOOL *pfEnabled);
+extern PFN_DwmEnableBlurBehindWindow dwmEnableBlurBehindWindow;
+extern PFN_DwmIsCompositionEnabled dwmIsCompositionEnabled;
+#endif
+
 /* Make up for some minor w32api or MSVC6 header lossage */
 
 #ifndef PS_JOIN_MASK
@@ -496,6 +505,7 @@
 					         GdkAtom            atom);
 void _gdk_win32_append_event (GdkEvent *event);
 void _gdk_win32_emit_configure_event (GdkWindow *window);
+gboolean _gdk_win32_is_desktop_composition_enabled ();
 
 /* Initialization */
 void _gdk_win32_windowing_init (void);
diff -ur gtk+-3.12.0/gdk/win32/gdkscreen-win32.c gtk+-3.12.0.bak2/gdk/win32/gdkscreen-win32.c
--- gtk+-3.12.0/gdk/win32/gdkscreen-win32.c	2014-04-09 18:36:35.355754300 +0000
+++ gtk+-3.12.0.bak2/gdk/win32/gdkscreen-win32.c	2014-04-09 05:55:46.973645900 +0000
@@ -174,7 +174,7 @@
 {
   g_return_val_if_fail (GDK_IS_SCREEN (screen), FALSE);
 
-  return FALSE;
+  return _gdk_win32_is_desktop_composition_enabled ();
 }
 
 static void
@@ -177,6 +177,27 @@
   return _gdk_win32_is_desktop_composition_enabled ();
 }
 
+
+gboolean
+_gdk_win32_is_desktop_composition_enabled ()
+{
+  BOOL b;
+  DWORD sysver, major, minor;
+  sysver = GetVersion ();
+  major = (DWORD)(LOBYTE (LOWORD (sysver)));
+  minor = (DWORD)(HIBYTE (LOWORD (sysver)));
+  /* Composition is always enabled in W8 */
+  if (major >= 6 && minor >= 2)
+    {
+      return TRUE;
+    }
+  if (dwmIsCompositionEnabled && (S_OK == dwmIsCompositionEnabled (&b)))
+    {
+      return b;
+    }
+  return FALSE;
+}
+
 static void
 gdk_win32_screen_finalize (GObject *object)
 {
--- gtk+-3.12.0/gdk/win32/gdkwindow-win32.c.orig	2014-04-10 07:23:03.093955400 +0000
+++ gtk+-3.12.0/gdk/win32/gdkwindow-win32.c	2014-04-10 07:25:38.093137800 +0000
@@ -688,47 +688,32 @@
   if (attributes_mask & GDK_WA_CURSOR)
     gdk_window_set_cursor (window, attributes->cursor);
 
-/* HAVE_W32_DWM means that we have necessary declarations at compile-time,
- * but we'd still like to be able to run on XP, so we'll load the only non-XP
- * function we need here at runtime.
- */
 #ifdef HAVE_W32_DWM
   /* Enable blurbehind, but give it an empty region, leaving us
      with all the transparency with none of the blur */
-  {
-    typedef HRESULT (WINAPI *PFN_DwmEnableBlurBehindWindow)(HWND,
-        const DWM_BLURBEHIND *);
-    HMODULE dwmdll;
-    PFN_DwmEnableBlurBehindWindow dwmEnableBlurBehindWindow = NULL;
-
-    dwmdll = GetModuleHandle ("dwmapi.dll");
-    dwmEnableBlurBehindWindow = (PFN_DwmEnableBlurBehindWindow)
-        GetProcAddress (dwmdll, "DwmEnableBlurBehindWindow");
-
-    if (dwmEnableBlurBehindWindow)
-      {
-        /* Enable blurbehind, but give it an empty region, leaving us
-           with all the transparency with none of the blur */
-        DWM_BLURBEHIND bb;
-        HRGN hRgn;
-        hRgn = CreateRectRgn (0, 0, -1, -1);
-        if (hRgn != NULL)
-          {
-            HRESULT hr;
-            memset (&bb, 0, sizeof (bb));
-            bb.dwFlags = DWM_BB_ENABLE | DWM_BB_BLURREGION;
-            bb.hRgnBlur = hRgn;
-            bb.fEnable = TRUE;
-            hr = dwmEnableBlurBehindWindow (GDK_WINDOW_HWND (window), &bb);
-            if (S_OK != hr)
-              {
-                g_warning ("%s: %s failed: %" G_GINT64_MODIFIER "x",
-                    G_STRLOC, "DwmEnableBlurBehindWindow", (guint64) hr);
-              }
-            DeleteObject (hRgn);
-          }
-      }
-  }
+  if (dwmEnableBlurBehindWindow && \
+      _gdk_win32_is_desktop_composition_enabled () && \
+      GDK_WINDOW_HWND (window) != NULL)
+    {
+      DWM_BLURBEHIND bb;
+      HRGN hRgn;
+      hRgn = CreateRectRgn (0, 0, -1, -1);
+      if (hRgn != NULL)
+        {
+          HRESULT hr;
+          memset (&bb, 0, sizeof (bb));
+          bb.dwFlags = DWM_BB_ENABLE | DWM_BB_BLURREGION;
+          bb.hRgnBlur = hRgn;
+          bb.fEnable = TRUE;
+          hr = dwmEnableBlurBehindWindow (GDK_WINDOW_HWND (window), &bb);
+          if (S_OK != hr)
+            {
+              g_warning ("%s: %s failed: %" G_GINT32_MODIFIER "x",
+                  G_STRLOC, "DwmEnableBlurBehindWindow", (guint32) hr);
+            }
+          DeleteObject (hRgn);
+        }
+    }
 #endif
 }
 
--- gtk+-3.12.0/gtk/gtkwindow.c.orig	2014-03-25 00:17:20.000000000 +0000
+++ gtk+-3.12.0/gtk/gtkwindow.c	2014-04-10 07:26:47.983012700 +0000
@@ -3629,6 +3629,9 @@
 
       screen = gtk_widget_get_screen (widget);
 
+      if (!gdk_screen_is_composited (screen))
+        return FALSE;
+
       /* We need a visual with alpha */
       visual = gdk_screen_get_rgba_visual (screen);
       if (!visual)
